name: Deploy BlazorGolf Web API CI/CD

env:
  CONFIGURATION: Debug
  TESTAPP_PACKAGE_PATH: './tests/ApiTests'
  TEST_FILE_NAME: 'apitests'
  AZURE_WEBAPP_NAME: app-api-blazorgolf 
  AZURE_WEBAPP_SOURCE_PATH: './src/BlazorGolf.Api'
  AZURE_WEBAPP_PACKAGE_PATH: './api'
  API_PACKAGE_NAME: 'api-app' 
  DOTNET_VERSION: '6.0.x'

on:
  push:
    branches:
      - main
    paths:
      - 'src/BlazorGolf.Api/**'
  pull_request:
    branches: 
      - main
    paths:
      - 'src/BlazorGolf.Api/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build and Publish
        shell: bash
        run: |
          pushd '${{ env.AZURE_WEBAPP_SOURCE_PATH }}'
          dotnet build --configuration ${{ env.CONFIGURATION }}
          dotnet publish -c ${{env.CONFIGURATION}}  -o ${{env.AZURE_WEBAPP_PACKAGE_PATH}}
          popd

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.API_PACKAGE_NAME}}
          path: '${{ env.AZURE_WEBAPP_SOURCE_PATH }}/api'

      - name: Test
        run: |
          dotnet test ${{env.TESTAPP_PACKAGE_PATH}} --configuration ${{ env.CONFIGURATION}} --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
    
      - name: Copy Coverage To Predictable Location
        run: |
          cp coverage/**/coverage.cobertura.xml coverage.cobertura.xml
    
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.2.0
        with:
          filename: coverage.cobertura.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.DEV_AZURE_WEBAPI_PUBLISH_PROFILE }}
          package: ${{env.API_PACKAGE_NAME}}
